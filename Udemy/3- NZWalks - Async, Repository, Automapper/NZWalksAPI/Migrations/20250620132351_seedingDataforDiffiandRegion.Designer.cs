// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NZWalksAPI.Data;

#nullable disable

namespace NZWalksAPI.Migrations
{
    [DbContext(typeof(NZWalksDbContext))]
    [Migration("20250620132351_seedingDataforDiffiandRegion")]
    partial class seedingDataforDiffiandRegion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NZWalksAPI.Models.Domain.Difficulty", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Difficulties");

                    b.HasData(
                        new
                        {
                            Id = new Guid("aa7bc287-a747-4cd4-a652-c337f5d36df8"),
                            Name = "Easy"
                        },
                        new
                        {
                            Id = new Guid("185a83b6-eca8-4a40-86bd-44abba6bf337"),
                            Name = "Medium"
                        },
                        new
                        {
                            Id = new Guid("278d59ff-285e-4b13-9072-1c5780de16fc"),
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("NZWalksAPI.Models.Domain.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegionImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e5505c6e-6645-4fc9-8f12-d44465e2aaa8"),
                            Code = "NTH",
                            Name = "Northland",
                            RegionImageUrl = "https://images.pexels.com/photos/2325447/pexels-photo-2325447.jpeg"
                        },
                        new
                        {
                            Id = new Guid("03698f50-8393-4b56-9854-811b16251ead"),
                            Code = "AKL",
                            Name = "Auckland",
                            RegionImageUrl = "https://images.pexels.com/photos/2325447/pexels-photo-2325447.jpeg"
                        },
                        new
                        {
                            Id = new Guid("0df0a773-6473-4e7d-8893-50deb5455107"),
                            Code = "WKO",
                            Name = "Waikato",
                            RegionImageUrl = "https://images.pexels.com/photos/2325447/pexels-photo-2325447.jpeg"
                        },
                        new
                        {
                            Id = new Guid("77dea13b-c820-4b6e-9086-49aab6b944e1"),
                            Code = "BOP",
                            Name = "Bay of Plenty",
                            RegionImageUrl = "https://images.pexels.com/photos/2325447/pexels-photo-2325447.jpeg"
                        },
                        new
                        {
                            Id = new Guid("d428b08e-d4f3-4219-9dc2-3c728446a4be"),
                            Code = "GIS",
                            Name = "Gisborne",
                            RegionImageUrl = "https://images.pexels.com/photos/2325447/pexels-photo-2325447.jpeg"
                        });
                });

            modelBuilder.Entity("NZWalksAPI.Models.Domain.Walk", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("DifficultyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("LengthInKm")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RegionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("WalkImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DifficultyId");

                    b.HasIndex("RegionId");

                    b.ToTable("Walks");
                });

            modelBuilder.Entity("NZWalksAPI.Models.Domain.Walk", b =>
                {
                    b.HasOne("NZWalksAPI.Models.Domain.Difficulty", "Difficulty")
                        .WithMany()
                        .HasForeignKey("DifficultyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NZWalksAPI.Models.Domain.Region", "Region")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Difficulty");

                    b.Navigation("Region");
                });
#pragma warning restore 612, 618
        }
    }
}
